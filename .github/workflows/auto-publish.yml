name: Auto Publish to npm

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Detect Release Type
        id: release_type
        run: |
          # Get last commit message
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MSG"

          # Check if this is an RC release
          if echo "$COMMIT_MSG" | grep -E -i '(RC|rc)[0-9]+'; then
            echo "Detected RC release"
            echo "type=rc" >> $GITHUB_OUTPUT
            echo "tag=next" >> $GITHUB_OUTPUT
            echo "prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "Detected stable release"
            echo "type=stable" >> $GITHUB_OUTPUT
            echo "tag=latest" >> $GITHUB_OUTPUT
            echo "prerelease=false" >> $GITHUB_OUTPUT
          fi

          # Skip if commit message contains [skip publish]
          if echo "$COMMIT_MSG" | grep -i '\[skip publish\]'; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if Should Skip
        if: steps.release_type.outputs.skip == 'true'
        run: |
          echo "Skipping publish due to [skip publish] in commit message"
          exit 0

      - name: Install Dependencies
        if: steps.release_type.outputs.skip != 'true'
        run: pnpm install --frozen-lockfile

      - name: Run Tests
        if: steps.release_type.outputs.skip != 'true'
        run: pnpm run test || echo "No tests configured"

      - name: Build
        if: steps.release_type.outputs.skip != 'true'
        run: pnpm run build

      - name: Version Bump
        if: steps.release_type.outputs.skip != 'true'
        id: version
        run: |
          git config --local user.email "genie@namastex.ai"
          git config --local user.name "Automagik Genie"

          if [ "${{ steps.release_type.outputs.type }}" == "rc" ]; then
            # RC release - bump prerelease version
            npm version prerelease --preid=rc --no-git-tag-version
          else
            # Stable release - bump patch version
            npm version patch --no-git-tag-version
          fi

          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Publish to npm
        if: steps.release_type.outputs.skip != 'true'
        run: npm publish --tag ${{ steps.release_type.outputs.tag }} --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.release_type.outputs.skip != 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          release_name: Release v${{ steps.version.outputs.new_version }}
          body: |
            Auto-published from main branch.

            Type: ${{ steps.release_type.outputs.type }}
            Tag: ${{ steps.release_type.outputs.tag }}

            Install:
            ```bash
            npm install automagik-genie@${{ steps.release_type.outputs.tag }}
            ```
          draft: false
          prerelease: ${{ steps.release_type.outputs.prerelease }}

      - name: Commit Version Bump
        if: steps.release_type.outputs.skip != 'true'
        run: |
          git add package.json
          git commit -m "chore: bump version to v${{ steps.version.outputs.new_version }} [skip ci] [skip publish]" || echo "No changes to commit"
          git push origin main || echo "Nothing to push"

      - name: Notify Success
        if: steps.release_type.outputs.skip != 'true' && success()
        run: |
          echo "‚úÖ Published v${{ steps.version.outputs.new_version }} to npm @${{ steps.release_type.outputs.tag }}"
          echo "üì¶ Install: npm install automagik-genie@${{ steps.release_type.outputs.tag }}"
          echo "üîó Release: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.new_version }}"

      - name: Notify Failure
        if: steps.release_type.outputs.skip != 'true' && failure()
        run: |
          echo "‚ùå Auto-publish failed"
          echo "Check logs above for details"
          exit 1
